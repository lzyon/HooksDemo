{"ast":null,"code":"import \"antd-mobile/lib/search-bar/style/css\";\nimport _SearchBar from \"antd-mobile/lib/search-bar\";\nimport _slicedToArray from \"F:\\\\train\\\\train-ticket\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\train\\\\train-ticket\\\\src\\\\pages\\\\components\\\\City\\\\City.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\nimport \"./City.scss\";\nimport { Header } from \"../../index\";\nimport index from \"../../../store/index\";\n\nconst City = props => {\n  const history = props.history;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        cityList = _useState2[0],\n        setCityList = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        searchVal = _useState4[0],\n        setSearchVal = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        citySearchList = _useState6[0],\n        setSearchCityList = _useState6[1];\n\n  useEffect(() => {\n    const getCityList = async () => {\n      let res = await index.getCityList();\n\n      if (res.resultCode === 0) {\n        setCityList(res.result);\n        localStorage.setItem('cityList', JSON.stringify(res.result));\n      }\n    };\n\n    let cityArr = JSON.parse(localStorage.getItem('cityList') || '[]');\n\n    if (cityArr.length) {\n      setCityList(cityArr);\n    } else {\n      getCityList();\n    }\n  }, []);\n  useEffect(() => {\n    const getSearchCityList = async () => {\n      let res = index.getSearchCityList(searchVal);\n      setSearchCityList(res);\n    };\n\n    getSearchCityList();\n  }, [searchVal]);\n\n  const toLocation = val => {// document.querySelector(`[data-cate='${val}']`).scrollIntoView();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"city-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Header, {\n    history: history,\n    title: \"选择城市\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(_SearchBar, {\n    className: \"searchCity\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u57CE\\u5E02\\u6216\\u8F66\\u7AD9\\u540D\",\n    onClear: () => {},\n    onCancel: () => {},\n    onChange: e => {\n      setSearchVal(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), searchVal && (citySearchList.length ? citySearchList.map(item => {\n    return React.createElement(CityItem, {\n      city: item,\n      history: history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  }) : React.createElement(\"div\", {\n    className: \"emptyList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"\\u65E0\\u6CD5\\u67E5\\u8BE2\\u5230\\u8F66\\u7AD9\")), !searchVal && cityList.map(item => {\n    return React.createElement(\"div\", {\n      className: \"cityCate\",\n      key: item.idx,\n      \"data-cate\": item.idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cateName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, item.idx), item.cities.map(cityItem => {\n      return React.createElement(CityItem, {\n        city: cityItem,\n        history: history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    }));\n  }), !searchVal && React.createElement(Location, {\n    toLocation: toLocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n};\n\nexport default observer(City);\n\nconst CityItem = props => {\n  const city = props.city,\n        history = props.history;\n  const id = city.id,\n        name = city.name;\n  return React.createElement(\"div\", {\n    className: \"cityItem\",\n    key: id,\n    onClick: () => {\n      index.changeStation(name);\n      history.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, name);\n};\n\nconst Location = props => {\n  const toLocation = props.toLocation;\n  let locationList = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"M\", \"N\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"W\", \"X\", \"Y\", \"Z\"];\n  return React.createElement(\"div\", {\n    className: \"locationList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, locationList.map((item, index) => {\n    return React.createElement(\"div\", {\n      className: \"locationItem\",\n      key: index,\n      onClick: () => {\n        toLocation(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, item);\n  }));\n};","map":{"version":3,"sources":["F:\\train\\train-ticket\\src\\pages\\components\\City\\City.tsx"],"names":["React","useState","useEffect","observer","Header","index","City","props","history","cityList","setCityList","searchVal","setSearchVal","citySearchList","setSearchCityList","getCityList","res","resultCode","result","localStorage","setItem","JSON","stringify","cityArr","parse","getItem","length","getSearchCityList","toLocation","val","e","map","item","idx","cities","cityItem","CityItem","city","id","name","changeStation","goBack","Location","locationList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { toJS } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport \"./City.scss\";\r\nimport { History } from \"history\";\r\nimport { Header } from \"../../index\";\r\nimport index from \"../../../store/index\";\r\nimport { SearchBar } from 'antd-mobile';\r\nimport { CityInfo, CityObj } from '../../../models/index';\r\n\r\ninterface Props {\r\n  history: History;\r\n}\r\n\r\nconst City = (props: Props) => {\r\n  const { history } = props;\r\n  const [cityList, setCityList] = useState([]);\r\n  const [searchVal, setSearchVal] = useState('');\r\n  const [citySearchList, setSearchCityList] = useState([] as CityInfo[]);\r\n  \r\n  useEffect(() => {\r\n    const getCityList = async () => {\r\n      let res = await index.getCityList();\r\n      if (res.resultCode === 0) {\r\n        setCityList(res.result);\r\n        localStorage.setItem('cityList', JSON.stringify(res.result));\r\n      } \r\n    }\r\n    let cityArr = JSON.parse(localStorage.getItem('cityList') || '[]');\r\n    if (cityArr.length){\r\n      setCityList(cityArr);\r\n    } else {\r\n      getCityList();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getSearchCityList = async () => {\r\n      let res = index.getSearchCityList(searchVal);\r\n      setSearchCityList(res);\r\n    }\r\n    getSearchCityList();\r\n  }, [searchVal])\r\n\r\n  const toLocation = (val: string) => {\r\n    // document.querySelector(`[data-cate='${val}']`).scrollIntoView();\r\n  }\r\n\r\n  return (\r\n    <div className=\"city-page\">\r\n      <Header history={history} title={\"选择城市\"} />\r\n      <SearchBar\r\n        className=\"searchCity\"\r\n        placeholder=\"请输入城市或车站名\"\r\n        onClear={() => {}}\r\n        onCancel={() => {\r\n\r\n        }}\r\n        onChange={(e) => {\r\n          setSearchVal(e);\r\n        }}\r\n      />\r\n\r\n      {searchVal && (citySearchList.length ? citySearchList.map((item: CityInfo) => {\r\n        return <CityItem city={item} history={history} />\r\n      }) : \r\n        <div className=\"emptyList\">无法查询到车站</div>\r\n      )}\r\n\r\n      {!searchVal && cityList.map((item: CityObj) => {\r\n        return <div className=\"cityCate\" key={item.idx} data-cate={item.idx}>\r\n          <div className=\"cateName\">{item.idx}</div>\r\n          {item.cities.map((cityItem: CityInfo) => {\r\n            return <CityItem city={cityItem} history={history} />\r\n          })}\r\n        </div>\r\n      })}\r\n\r\n      {!searchVal && <Location toLocation={toLocation} />}\r\n    </div>\r\n  );\r\n};\r\nexport default observer(City);\r\n\r\ninterface CityItemProps{\r\n  history: History;\r\n  city: {\r\n    id: number;\r\n    name: string;\r\n  }\r\n}\r\nconst CityItem = (props: CityItemProps) => {\r\n  const { city, history } = props;\r\n  const { id, name } = city;\r\n  \r\n  return <div className=\"cityItem\" key={id} onClick={() => {index.changeStation(name); history.goBack()}}>{name}</div>\r\n    \r\n};\r\n\r\ninterface LocationProps{\r\n  toLocation: any;\r\n}\r\nconst Location = (props: LocationProps) => {\r\n  const { toLocation } = props;\r\n\r\n  let locationList = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"J\",\"K\",\"L\",\"M\",\"N\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"W\",\"X\",\"Y\",\"Z\"];\r\n\r\n  \r\n  return <div className=\"locationList\">\r\n    {locationList.map((item, index) => {\r\n      return <div className=\"locationItem\" key={index} onClick={() => {toLocation(item)}}>\r\n        {item}\r\n      </div>\r\n    })}\r\n  </div>\r\n};"]},"metadata":{},"sourceType":"module"}