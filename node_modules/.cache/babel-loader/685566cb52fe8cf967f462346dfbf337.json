{"ast":null,"code":"import _initializerDefineProperty from \"F:\\\\train\\\\train-ticket\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"F:\\\\train\\\\train-ticket\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"F:\\\\train\\\\train-ticket\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp;\n\nimport { observable, action } from \"mobx\";\nlet IndexStore = (_class = (_temp = class IndexStore {\n  constructor() {\n    _initializerDefineProperty(this, \"from\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"to\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"station\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"exchangeStation\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"changeStation\", _descriptor5, this);\n  }\n\n  getCityList() {\n    return fetch('/getCity').then(response => {\n      return response.json().then(res => {\n        return res;\n      });\n    }).catch(err => {\n      console.log(err, '000-err');\n    });\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"from\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"北京\";\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"to\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"上海\";\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"station\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"exchangeStation\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      let temp = this.from;\n      this.from = this.to;\n      this.to = temp;\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getCityList\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getCityList\"), _class.prototype), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"changeStation\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return val => {\n      this.station === 'to' ? this.to = val : this.from = val;\n    };\n  }\n})), _class);\nconst index = new IndexStore();\nexport default index;","map":{"version":3,"sources":["F:\\train\\train-ticket\\src\\store\\index.tsx"],"names":["observable","action","IndexStore","getCityList","fetch","then","response","json","res","catch","err","console","log","temp","from","to","val","station","index"],"mappings":";;;;;;AACA,SAASA,UAAT,EAA2BC,MAA3B,QAAkE,MAAlE;IAEMC,U,sBAAN,MAAMA,UAAN,CAAiB;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAWPC,EAAAA,WAAR,GAAqB;AACjB,WAAOC,KAAK,CAAC,UAAD,CAAL,CAAkBC,IAAlB,CAAwBC,QAAD,IAAc;AAC1C,aAAOA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBG,GAAD,IAAS;AACnC,eAAOA,GAAP;AACD,OAFM,CAAP;AAID,KALM,EAKJC,KALI,CAKGC,GAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,SAAjB;AACD,KAPM,CAAP;AAQH;;AApBc,C,8EACdV,U;;;;;WAA0B,I;;sEAC1BA,U;;;;;WAAwB,I;;2EACxBA,U;;;;;WAA6B,E;;mFAE7BC,M;;;;;WAAyB,MAAY;AACpC,UAAIY,IAAI,GAAG,KAAKC,IAAhB;AACA,WAAKA,IAAL,GAAY,KAAKC,EAAjB;AACA,WAAKA,EAAL,GAAUF,IAAV;AACD,K;;gEAEAZ,M,qKAWAA,M;;;;;WAAwBe,GAAD,IAAiB;AACvC,WAAKC,OAAL,KAAiB,IAAjB,GAAwB,KAAKF,EAAL,GAAUC,GAAlC,GAAwC,KAAKF,IAAL,GAAYE,GAApD;AACD,K;;;AAGH,MAAME,KAAK,GAAG,IAAIhB,UAAJ,EAAd;AACA,eAAegB,KAAf","sourcesContent":["import React from \"react\";\r\nimport { observable, toJS, action, autorun, when, reaction } from \"mobx\";\r\n\r\nclass IndexStore {\r\n  @observable from: string = \"北京\";\r\n  @observable to: string = \"上海\";\r\n  @observable station: string = '';\r\n\r\n  @action exchangeStation = (): void => {\r\n    let temp = this.from;\r\n    this.from = this.to;\r\n    this.to = temp;\r\n  };\r\n\r\n  @action getCityList(){\r\n      return fetch('/getCity').then((response) => {\r\n        return response.json().then((res) => {\r\n          return res;\r\n        });\r\n        \r\n      }).catch((err) => {\r\n        console.log(err, '000-err')\r\n      });\r\n  }\r\n\r\n  @action changeStation = (val: string) => {\r\n    this.station === 'to' ? this.to = val : this.from = val;\r\n  };\r\n}\r\n\r\nconst index = new IndexStore();\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}