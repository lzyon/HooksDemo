{"ast":null,"code":"import _initializerDefineProperty from \"/train/train-ticket/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/train/train-ticket/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/train/train-ticket/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _temp,\n    _class3,\n    _jsxFileName = \"/train/train-ticket/src/pages/TodoList/index.tsx\",\n    _class4;\n\nimport React from 'react';\nimport { observable, computed, action } from \"mobx\";\nimport { observer } from 'mobx-react';\nimport './index.scss'; // 定义Todo数据类型\n\nclass Todo {\n  constructor(title) {\n    this.id = new Date().getTime();\n    this.title = '';\n    this.finished = false;\n    this.title = title;\n  }\n\n} // Store数据方法管理\n\n\nlet Store = (_class = (_temp = class Store {\n  constructor() {\n    _initializerDefineProperty(this, \"title\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"todos\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"createTodo\", _descriptor3, this);\n  }\n\n  // 添加Todo的Title\n  createTitle(e) {\n    console.log('e', e.target.value);\n    this.title = e.target.value;\n  } // 增加Todo数据\n\n\n  // 删除Todo\n  delTodo(id) {\n    this.todos.forEach((item, index) => {\n      if (item.id === id) {\n        this.todos.splice(index, 1);\n      }\n    });\n  } // 监听todos数据变化,显示剩余待办数量\n\n\n  get unfinished() {\n    return this.todos.filter(todo => !todo.finished).length;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"title\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"todos\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"createTitle\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"createTitle\"), _class.prototype), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"createTodo\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.todos.unshift(new Todo(this.title));\n      this.title = '';\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"delTodo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"delTodo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"unfinished\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"unfinished\"), _class.prototype)), _class);\n\n// 每一条Todo数据组件\nlet TodoItem = observer(_class3 = class TodoItem extends React.Component {\n  render() {\n    const _this$props = this.props,\n          todo = _this$props.todo,\n          store = _this$props.store;\n    return React.createElement(\"div\", {\n      className: \"item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, todo.title), React.createElement(\"span\", {\n      onClick: () => store.delTodo(todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"X\"));\n  }\n\n}) || _class3;\n\nconst store = new Store();\n\nlet TodoList = observer(_class4 = class TodoList extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"TodoList\"), React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"please input\",\n      value: store.title,\n      onChange: e => store.createTitle(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: store.createTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"add\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, store.todos.map(todo => {\n      return React.createElement(\"li\", {\n        key: todo.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(TodoItem, {\n        todo: todo,\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    })), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, store.unfinished, \" item(s) unfinished\"));\n  }\n\n}) || _class4;\n\nexport default TodoList;","map":{"version":3,"sources":["/train/train-ticket/src/pages/TodoList/index.tsx"],"names":["React","observable","computed","action","observer","Todo","constructor","title","id","Date","getTime","finished","Store","createTitle","e","console","log","target","value","delTodo","todos","forEach","item","index","splice","unfinished","filter","todo","length","unshift","TodoItem","Component","render","props","store","TodoList","createTodo","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {observable, isArrayLike, computed, action, autorun, when, reaction,runInAction} from \"mobx\";\nimport {observer} from 'mobx-react';\nimport './index.scss';\n// 定义Todo数据类型\nclass Todo {\n    id:number = new Date().getTime();\n    title:string = '';\n    finished:boolean = false;\n    constructor(title:string) {\n        this.title = title;\n    }\n}\n// Store数据方法管理\nclass Store {\n    @observable title:string = '';\n    @observable todos:Todo[] =[];\n    // 添加Todo的Title\n    @action createTitle (e:any) {\n        console.log('e',e.target.value);\n        this.title = e.target.value;\n    }\n    // 增加Todo数据\n    @action createTodo = () => {\n        this.todos.unshift(new Todo(this.title));\n        this.title = '';\n    }\n    // 删除Todo\n    @action delTodo (id:number) {\n        this.todos.forEach((item,index) => {\n            if (item.id === id) {\n                this.todos.splice(index,1)\n            }\n        })\n    }\n    // 监听todos数据变化,显示剩余待办数量\n    @computed get unfinished () {\n        return this.todos.filter(todo => !todo.finished).length;\n    }\n\n}\ninterface TodoItemProps {\n    todo:any;\n    store:any;\n}\n// 每一条Todo数据组件\n@observer \nclass TodoItem extends React.Component<TodoItemProps> {\n    render() {\n        const {todo,store} = this.props\n        return (\n            <div className=\"item\">\n               <span>{todo.title}</span>\n               <span onClick={()=> store.delTodo(todo.id)}>X</span>\n            </div>\n        )\n    }\n}\nconst store = new Store();\n@observer \nclass TodoList extends React.Component {\n    render() {\n        return (\n            <div>\n                <h2>TodoList</h2>\n                <header>\n                    <input type=\"text\" placeholder=\"please input\" value={store.title} onChange = {e => store.createTitle(e)} />\n                    <button onClick ={store.createTodo}>add</button>\n                </header>\n                <ul>\n                    {store.todos.map((todo)=>{\n                        return <li key={todo.id}>\n                           <TodoItem todo={todo} store = {store}/>\n                        </li>\n                    })}\n                </ul>\n                <footer>\n                 {store.unfinished} item(s) unfinished\n                </footer>\n            </div>\n        )\n    }\n}\nexport default TodoList"]},"metadata":{},"sourceType":"module"}