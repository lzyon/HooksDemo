{"ast":null,"code":"import _initializerDefineProperty from \"F:\\\\train\\\\train-ticket\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"F:\\\\train\\\\train-ticket\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"F:\\\\train\\\\train-ticket\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nimport { observable, toJS, action } from \"mobx\";\nlet IndexStore = (_class = (_temp = class IndexStore {\n  constructor() {\n    _initializerDefineProperty(this, \"from\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"to\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"exchangeStation\", _descriptor3, this);\n  }\n\n  async getCityList() {\n    await fetch('/getCity').then(res => {\n      return toJS(res.json());\n    });\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"from\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"北京\";\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"to\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"上海\";\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"exchangeStation\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      let temp = this.from;\n      this.from = this.to;\n      this.to = temp;\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getCityList\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getCityList\"), _class.prototype)), _class);\nconst index = new IndexStore();\nexport default index;","map":{"version":3,"sources":["F:\\train\\train-ticket\\src\\store\\index.tsx"],"names":["observable","toJS","action","IndexStore","getCityList","fetch","then","res","json","temp","from","to","index"],"mappings":";;;;;;AACA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,MAA3B,QAAkE,MAAlE;IAEMC,U,sBAAN,MAAMA,UAAN,CAAiB;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAUf,QAAcC,WAAd,GAA2B;AACvB,UAAMC,KAAK,CAAC,UAAD,CAAL,CAAkBC,IAAlB,CAAwBC,GAAD,IAAS;AACpC,aAAON,IAAI,CAACM,GAAG,CAACC,IAAJ,EAAD,CAAX;AACD,KAFK,CAAN;AAGH;;AAdc,C,8EACdR,U;;;;;WAA0B,I;;sEAC1BA,U;;;;;WAAwB,I;;mFAExBE,M;;;;;WAAyB,MAAY;AACpC,UAAIO,IAAI,GAAG,KAAKC,IAAhB;AACA,WAAKA,IAAL,GAAY,KAAKC,EAAjB;AACA,WAAKA,EAAL,GAAUF,IAAV;AACD,K;;gEAEAP,M;AAOH,MAAMU,KAAK,GAAG,IAAIT,UAAJ,EAAd;AACA,eAAeS,KAAf","sourcesContent":["import React from \"react\";\r\nimport { observable, toJS, action, autorun, when, reaction } from \"mobx\";\r\n\r\nclass IndexStore {\r\n  @observable from: string = \"北京\";\r\n  @observable to: string = \"上海\";\r\n\r\n  @action exchangeStation = (): void => {\r\n    let temp = this.from;\r\n    this.from = this.to;\r\n    this.to = temp;\r\n  };\r\n\r\n  @action async getCityList(){\r\n      await fetch('/getCity').then((res) => {\r\n        return toJS(res.json());\r\n      });\r\n  }\r\n}\r\n\r\nconst index = new IndexStore();\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}